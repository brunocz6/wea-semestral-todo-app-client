{"version":3,"sources":["common/input-validation.component.tsx","hooks/use-debounce.hook.tsx","hooks/use-validation.hook.tsx","validation/login.schema.ts","common/default-request-header.ts","config/default.ts","config/api-routes.ts","services/authorize.service.ts","components/connect/login.component.tsx","validation/register.schema.ts","components/connect/register.component.tsx","validation/todo.schema.ts","services/todo.service.ts","components/todo-editor/todo-editor.component.tsx","components/todo-list/todo-list-item-component.tsx","components/todo-list/todo-remove-dialog.component.tsx","components/todo-list/todo-list.component.tsx","components/dashboard/dashboard.component.tsx","styles/theme.ts","components/layout/layout.component.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["InputValidation","errors","fieldKey","value","errorsToShow","length","map","e","i","Typography","sx","color","theme","palette","error","main","variant","displayName","useDebounce","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useValidation","props","schema","object","isValid","setIsValid","validationErrors","setValidationErrors","validate","a","abortEarly","then","catch","inner","forEach","path","loginSchema","password","string","required","min","matches","nullable","email","defaultHeader","crossDomain","CONFIG","apiUrl","userStorageKey","API_ROUTES","API_FULL_ROUTES","sessions","users","todos","updateTodo","getTodo","deleteTodo","login","axios","post","res","status","data","accessToken","refreshToken","localStorage","setItem","JSON","stringify","register","name","passwordConfirmation","logout","delete","headers","getAuthHeader","removeItem","getCurrentUser","userJson","getItem","parse","extendWithAuthHeader","header","user","Login","onSuccess","setEmail","emailDebounced","setPassword","passwordDebounced","isWaitingForServer","setIsWaitingForServer","showLoginFailedError","setShowLoginFailedError","validatableForm","useMemo","emailOnChangeHandler","useCallback","ev","target","passwordOnChangeHandler","onSubmitHandler","AuthorizationService","err","Box","height","display","justifyContent","alignItems","Container","maxWidth","Paper","elevation","Stack","p","Avatar","Person","TextField","onChange","label","fullWidth","mb","type","alignSelf","to","LoadingButton","onClick","loading","Snackbar","open","autoHideDuration","Alert","severity","width","registerValidationSchema","shape","oneOf","ref","Register","navigate","useNavigate","setName","nameDebounced","setPasswordConfirmation","passwordConfirmationDebounced","showSuccess","setShowSuccess","showError","setShowError","nameOnChangeHandler","passwordConfirmationOnChangeHandler","afterSuccess","afterFail","onClose","todoSchema","max","description","deadline","date","create","todo","update","put","replace","_id","id","get","getAll","changeState","isDone","finishedAt","Date","undefined","TodoEditor","item","setDescription","descriptionDebounced","setDeadline","formData","descriptionOnChangeHandler","deadlineOnChangeHandler","TodoService","save","Dialog","DialogTitle","IconButton","aria-label","position","right","top","grey","Close","DialogContent","mt","DateTimePicker","renderInput","params","toString","DialogActions","Button","TodoListItem","onIsDoneChangedHandler","onEditButtonClickedHandler","onRemoveButtonClickedHandler","ListItem","secondaryAction","direction","Edit","Delete","disablePadding","ListItemButton","ListItemIcon","Checkbox","edge","checked","disableRipple","ListItemText","primary","secondary","fontSize","moment","format","paddingRight","wordBreak","TodoRemoveDialog","isOpenned","onAbortHandler","onSuccessHandler","onCancelButtonClickedHandler","TodoList","searchTerm","setSearchTerm","searchTermDebounced","showOnlyUndone","setShowOnlyUndone","todoEditorOpened","setTodoEditorOpened","todoRemoveDialogOpenned","setTodoRemoveDialogOpenned","currentTodoItem","setCurrentTodoItem","setTodos","searchTermOnChangeHandler","onFilterToggleHandler","onAddButtonClickedHandler","onTodoEditorClosedHandler","onTodoEditorSuccessHandler","refreshTodos","onTodoEditorOpennedHandler","onTodoRemoveDialogAbortHandler","onTodoRemoveDialogSuccessHandler","onTodoRemoveDialogOpennedHandler","todosRes","todosMemo","filter","t","indexOf","maxHeight","placeholder","FilterAltOff","FilterAlt","Add","List","overflowY","pt","textAlign","Dashboard","onLogout","AppBar","Toolbar","noWrap","component","mr","xs","md","flexDirection","flexGrow","createTheme","success","Gradient","styled","div","Layout","children","ThemeProvider","LocalizationProvider","dateAdapter","DateAdapter","App","isAuthenticated","setIsAutheticated","onLoginSuccessHandler","logoutSuccessHandler","dashboardMemo","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.365ddc9f.chunk.js","sourcesContent":["import { Typography } from \"@mui/material\";\nimport { FC } from \"react\";\n\n/** Parametry komponenty validace textového pole */\ninterface InputValidationProps {\n    /** Objekt s výsledky validace. */\n    errors: any,\n    /** Klíč, pod kterým jsou uloženy výsledky validace. */\n    fieldKey: string,\n    /** Hodnota, který neprošla validací. */\n    value: string | null | undefined\n}\n\n/**\n * Komponenta - validace textového pole.\n */\nconst InputValidation: FC<InputValidationProps> = ({ errors, fieldKey, value }) => {\n    const errorsToShow = errors[fieldKey];\n\n    if (value === null || !errorsToShow || errorsToShow.length === 0) {\n        return <></>\n    }\n\n    return errorsToShow.map((e: string, i: number) => (\n        <Typography sx={{ color: theme => theme.palette.error.main }} variant=\"caption\" key={i}>{e}</Typography>\n    ));\n};\n\nInputValidation.displayName = \"InputValidationComponent\";\nexport default InputValidation;","import { useEffect, useState } from \"react\";\n\n/**\n * Returns provided value, debounced by provider delay.\n * Observes provided value and returns it after enough time is passed.\n * @param value Value provided\n * @param delay Delay to debounce\n */\nexport function useDebounce<T>(value: T, delay: number) {\n    const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n    useEffect(\n        () => {\n            const handler = setTimeout(() => {\n                setDebouncedValue(value);\n            }, delay);\n\n            return () => {\n                clearTimeout(handler);\n            };\n        }, [value, delay]);\n\n    return debouncedValue;\n}","import { useCallback, useEffect, useState } from \"react\";\nimport { ObjectSchema } from \"yup\";\n\ninterface ValidationHookProps {\n    schema: ObjectSchema<any, any, any, any>,\n    object: any\n};\n\nexport const useValidation = (props: ValidationHookProps) => {\n    const { schema, object } = props;\n\n    const [isValid, setIsValid] = useState(true);\n    const [validationErrors, setValidationErrors] = useState<any>({});\n\n    const validate = async () => {\n        await schema\n            .validate(object, {\n                abortEarly: false\n            })\n            .then(() => {\n                setIsValid(true);\n                setValidationErrors({});\n            })\n            .catch((error) => {\n                let errors: any = {};\n\n                error.inner.forEach((e: any) => {\n                    errors[e.path] = e.errors;\n                });\n\n                setValidationErrors(errors);\n                setIsValid(false);\n            });\n    };\n\n    useEffect(() => {\n        validate();\n    }, [object]);\n\n    return [isValid, validationErrors];\n}","import { object, string } from \"yup\";\n\nexport const loginSchema = object({\n    password: string()\n        .required(\"Password is required\")\n        .min(6, \"Password is too short - should be 6 chars minimum\")\n        .matches(/^[a-zA-A0-9_.-]*$/, \"Password can only contain Latin letters.\")\n        .nullable(),\n    email: string()\n        .required(\"Email is required\")\n        .email(\"Must be a valid email\")\n        .nullable()\n});","import { AxiosRequestHeaders } from \"axios\";\n\nconst defaultHeader: AxiosRequestHeaders = {\n    \"Content-type\": \"application/json\",\n    crossDomain: \"true\"\n}\n\nexport default defaultHeader;","/**\n * Obecná konfigurace aplikace.\n */\nconst CONFIG = {\n    apiUrl: \"https://bruno-pfohl-todo-app-api.herokuapp.com/api/\",\n    userStorageKey: \"aU\"\n};\n\nexport default CONFIG;","import CONFIG from \"./default\";\n\n/**\n * Url endpointů v API (bez předpony).\n */\nexport const API_ROUTES = {\n    sessions: \"sessions\",\n    users: \"users\",\n    todos: \"todos\"\n}\n\n/**\n * Url endpointů v API (kompletní cesty).\n */\nexport const API_FULL_ROUTES = {\n    sessions: CONFIG.apiUrl + API_ROUTES.sessions,\n    users: CONFIG.apiUrl + API_ROUTES.users,\n    todos: CONFIG.apiUrl + API_ROUTES.todos,\n    updateTodo: `${CONFIG.apiUrl}${API_ROUTES.todos}/{todoId}`,\n    getTodo: `${CONFIG.apiUrl}${API_ROUTES.todos}/{todoId}`,\n    deleteTodo: `${CONFIG.apiUrl}${API_ROUTES.todos}/{todoId}`,\n}","import axios from \"axios\";\nimport defaultHeader from \"../common/default-request-header\";\nimport { API_FULL_ROUTES } from \"../config\";\nimport CONFIG from \"../config/default\";\n\n/**\n * Třída pro správu uživatelského účtu.\n */\nclass AuthorizationService {\n\n    /**\n     * Pokusí se přihlásit uživatele na základě předaných údajů.\n     * @param email Přihlašovací e-mail\n     * @param password Heslo uživatele\n     * @returns Odpověď od serveru\n     */\n    login = (email: string, password: string) => {\n        return axios\n            .post(API_FULL_ROUTES.sessions, {\n                email,\n                password,\n            })\n            .then(res => {\n                if (res.status === 200) {\n                    const { accessToken, refreshToken } = res.data;\n\n                    localStorage.setItem(\n                        CONFIG.userStorageKey,\n                        JSON.stringify({\n                            email,\n                            accessToken,\n                            refreshToken\n                        })\n                    );\n                }\n\n                return res.data;\n            });\n    };\n\n    /**\n     * Pokusí se o registraci uživatele s předanými údaji.\n     * @param name Jméno uživatele\n     * @param email E-mail uživatele (slouží pro přihlášení)\n     * @param password Heslo uživatele\n     * @param passwordConfirmation Potvrzení hesla uživatele (musí být stejné jako password)\n     * @returns Vrací Promise dotazu pro registraci uživatele.\n     */\n    register = (name: string, email: string, password: string, passwordConfirmation: string) => {\n        return axios\n            .post(API_FULL_ROUTES.users, {\n                name,\n                email,\n                password,\n                passwordConfirmation\n            });\n    };\n\n    /**\n     * Odhlásí uživatele.\n     */\n    logout = () => {\n        return axios\n            .delete(API_FULL_ROUTES.sessions, {\n                headers: this.getAuthHeader()\n            })\n            .then(() => {\n                localStorage.removeItem(CONFIG.userStorageKey);\n            });\n    };\n\n    /**\n     * Pokusí se vrátit přihlášeného uživatele (počítá i s tím, že uživatel nemusí být přihlášený).\n     * @returns Objekt přihlášeného uživatele nebo null (pokud není přihlášený).\n     */\n    getCurrentUser = () => {\n        const userJson = localStorage.getItem(CONFIG.userStorageKey);\n\n        if (userJson) {\n            return JSON.parse(userJson);\n        }\n\n        return null;\n    };\n\n    /**\n     * Vrací výchozí hlavičku dotazu (včetně polí nutných pro autorizaci, pokud je uživatel přihlášený).\n     */\n    getAuthHeader = () => {\n        return this.extendWithAuthHeader(defaultHeader);\n    }\n\n    /**\n     * Rozšíří předanou hlavičku dotazu o pole nutná pro autorizaci uživatele.\n     * @param header Původní hlavička dotazu\n     */\n    extendWithAuthHeader = (header: any) => {\n        const user = this.getCurrentUser();\n\n        if (user && user.accessToken && user.refreshToken) {\n            return {\n                ...header,\n                \"Authorization\": `Bearer ${user.accessToken}`,\n                \"x-refresh\": user.refreshToken\n            };\n        }\n\n        return header;\n    }\n}\n\nexport default new AuthorizationService();","import { Person } from \"@mui/icons-material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { Alert, Avatar, Box, Container, Paper, Snackbar, Stack, TextField, Typography } from \"@mui/material\";\nimport { FC, useCallback, useMemo, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport InputValidation from \"../../common/input-validation.component\";\nimport { useDebounce } from \"../../hooks/use-debounce.hook\";\nimport { useValidation } from \"../../hooks/use-validation.hook\";\nimport { loginSchema } from \"../../validation/login.schema\";\nimport AuthorizationService from \"../../services/authorize.service\";\n\ninterface LoginProps {\n    onSuccess: () => void;\n}\n\n/**\n * Komponenta - formulář pro přihlášení uživatele.\n */\nconst Login: FC<LoginProps> = ({ onSuccess }) => {\n    // E-mail\n    const [email, setEmail] = useState<string | null>(null);\n    const emailDebounced = useDebounce(email, 1000);\n\n    // Heslo\n    const [password, setPassword] = useState<string | null>(null);\n    const passwordDebounced = useDebounce(password, 1000);\n\n    // Značí, zda-li formulář čeká na odpověď od serveru.\n    const [isWaitingForServer, setIsWaitingForServer] = useState<boolean>(false);\n\n    // Značí, zda-li se má zobrazit chybová hláška o neúspěšném přihlášení.\n    const [showLoginFailedError, setShowLoginFailedError] = useState<boolean>(false);\n\n    // Objekt pro validační knihovnu yup reprezentující data formuláře.\n    const validatableForm = useMemo(() => ({\n        email: emailDebounced,\n        password: passwordDebounced,\n    }), [emailDebounced, passwordDebounced]);\n\n    const [isValid, validationErrors] = useValidation({\n        schema: loginSchema,\n        object: validatableForm\n    });\n\n    /** Callback volaný při změně e-mailu */\n    const emailOnChangeHandler = useCallback((ev) => {\n        setEmail(ev.target.value);\n    }, [setEmail]);\n\n    /** Callback volaný při změne hesla */\n    const passwordOnChangeHandler = useCallback((ev) => {\n        setPassword(ev.target.value);\n    }, [setPassword]);\n\n    /** Callback volaný při potvrzení formuláře */\n    const onSubmitHandler = useCallback(() => {\n        if (isValid) {\n            setIsWaitingForServer(true);\n\n            AuthorizationService\n                .login(emailDebounced as string, passwordDebounced as string)\n                .then(\n                    () => {\n                        setIsWaitingForServer(false);\n                        onSuccess();\n                    },\n                    err => {\n                        setIsWaitingForServer(false);\n                        setShowLoginFailedError(true);\n                    }\n                );\n        }\n    }, [isValid, emailDebounced, onSuccess, passwordDebounced]);\n\n    return (\n        <Box sx={{ height: \"100vh\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n            <Container maxWidth=\"sm\" >\n                <Paper elevation={10}>\n                    <Stack sx={{ p: 1, alignItems: \"center\" }}>\n                        {/* Nadpis */}\n                        <Avatar>\n                            <Person />\n                        </Avatar>\n                        <Typography variant=\"h5\" sx={{ p: 1 }}>\n                            Přihlášení\n                        </Typography>\n\n                        {/* E-mail */}\n                        <TextField value={email} onChange={emailOnChangeHandler} label=\"E-mail\" fullWidth sx={{ mb: 1 }} />\n                        <InputValidation errors={validationErrors} fieldKey=\"email\" value={emailDebounced} />\n\n                        {/* Heslo */}\n                        <TextField type=\"password\" value={password} onChange={passwordOnChangeHandler} label=\"Heslo\" fullWidth sx={{ mb: 1 }} />\n                        <InputValidation errors={validationErrors} fieldKey=\"password\" value={password} />\n\n                        {/* Registrace */}\n                        <Typography variant=\"subtitle2\" sx={{ alignSelf: \"start\", mb: 1 }}>\n                            Stále ještě nemáte učet?&nbsp;\n                            <Link to=\"/register\">\n                                Registrujte se\n                            </Link>\n                            &nbsp;nyní!\n                        </Typography>\n\n                        {/* Potvrzení formuláře */}\n                        <LoadingButton onClick={onSubmitHandler} variant=\"contained\" fullWidth loading={isWaitingForServer}>Přihlásit</LoadingButton>\n\n                        {/* Hláška o selhání přihlášení */}\n                        <Snackbar open={showLoginFailedError} autoHideDuration={5000}>\n                            <Alert severity=\"error\" sx={{ width: '100%' }}>\n                                Přihlášení se nezdařilo.\n                            </Alert>\n                        </Snackbar>\n                    </Stack>\n                </Paper>\n            </Container>\n\n        </Box>\n    );\n}\n\nLogin.displayName = \"LoginComponent\";\nexport default Login;","import { object, string, ref } from \"yup\";\n\nexport const registerValidationSchema = object().shape({\n    name: string().required(\"Name is required\"),\n    password: string()\n        .required(\"Password is required\")\n        .min(6, \"Password is too short - should be 6 chars minimum.\")\n        .matches(/^[a-zA-A0-9_.-]*$/, \"Password can only contain Latin letters.\")\n        .nullable(),\n    passwordConfirmation: string()\n        .oneOf(\n            [ref(\"password\"), null],\n            \"Passwords must match\"\n        )\n        .nullable(),\n    email: string()\n        .email(\"Must be a valid e-mail.\")\n        .required(\"Email is required\")\n        .nullable()\n});","import { Person } from \"@mui/icons-material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { Alert, Avatar, Box, Container, Paper, Snackbar, Stack, TextField, Typography } from \"@mui/material\";\nimport { FC, useCallback, useMemo, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport InputValidation from \"../../common/input-validation.component\";\nimport { useDebounce } from \"../../hooks/use-debounce.hook\";\nimport { useValidation } from \"../../hooks/use-validation.hook\";\nimport AuthorizationService from \"../../services/authorize.service\";\nimport { registerValidationSchema } from \"../../validation/register.schema\";\n\ninterface RegisterProps {\n\n}\n\n/**\n * Komponenta - formulář pro registraci uživatele.\n */\nconst Register: FC<RegisterProps> = (props) => {\n    /** Metoda pro změnu stránky. */\n    const navigate = useNavigate();\n\n    // Jméno uživatele\n    const [name, setName] = useState<string | null>(null);\n    const nameDebounced = useDebounce(name, 1000);\n\n    // E-mail uživatele (používá se pro přihlšení)\n    const [email, setEmail] = useState<string | null>(null);\n    const emailDebounced = useDebounce(email, 1000);\n\n    // Heslo\n    const [password, setPassword] = useState<string | null>(null);\n    const passwordDebounced = useDebounce(password, 1000);\n\n    // Potvrzení hesla\n    const [passwordConfirmation, setPasswordConfirmation] = useState<string | null>(null);\n    const passwordConfirmationDebounced = useDebounce(passwordConfirmation, 1000);\n\n    // Značí, zda-li se formulář čeká na odpověď serveru.\n    const [isWaitingForServer, setIsWaitingForServer] = useState<boolean>(false);\n\n    // Značí, zda-li se má zobrazit hláška o úspěchu registrace.\n    const [showSuccess, setShowSuccess] = useState<boolean>(false);\n\n    // Značí, zda-li se má zobrazit hláška o selhání registrace.\n    const [showError, setShowError] = useState<boolean>(false);\n\n    // Objekt pro validační knihovnu yup reprezentující data formuláře.\n    const validatableForm = useMemo(() => ({\n        name: nameDebounced,\n        email: emailDebounced,\n        password: passwordDebounced,\n        passwordConfirmation: passwordConfirmationDebounced\n    }), [nameDebounced, emailDebounced, passwordDebounced, passwordConfirmationDebounced]);\n\n    const [isValid, validationErrors] = useValidation({\n        schema: registerValidationSchema,\n        object: validatableForm\n    });\n\n    /** Callback volaný při změně jména */\n    const nameOnChangeHandler = useCallback((ev) => {\n        setName(ev.target.value);\n    }, [setName]);\n\n    /** Callback volaný při změně e-mailu */\n    const emailOnChangeHandler = useCallback((ev) => {\n        setEmail(ev.target.value);\n    }, [setEmail]);\n\n    /** Callback volaný při změne hesla */\n    const passwordOnChangeHandler = useCallback((ev) => {\n        setPassword(ev.target.value);\n    }, [setPassword]);\n\n    /** Callback volaný při změne hesla */\n    const passwordConfirmationOnChangeHandler = useCallback((ev) => {\n        setPasswordConfirmation(ev.target.value);\n    }, [setPasswordConfirmation]);\n\n    /** Pokusí se o registraci uživatele */\n    const onSubmitHandler = useCallback(() => {\n        if (isValid) {\n            // Nastavím, že formulář čeká na odpověď od serveru.\n            setIsWaitingForServer(true);\n\n            // Pokusím se o API call - registrace.\n            AuthorizationService\n                .register(nameDebounced as string, emailDebounced as string, passwordDebounced as string, passwordConfirmationDebounced as string)\n                .then(\n                    res => {\n\n                        if (res.status === 200) {\n                            setShowSuccess(true);\n                        }\n                    },\n                    err => {\n                        setIsWaitingForServer(false);\n                        setShowError(true);\n                    }\n                );\n        }\n    }, [isValid, validationErrors, nameDebounced, emailDebounced, passwordDebounced, passwordConfirmationDebounced]);\n\n    /** Callback volaný po úspěšné registraci (zavolá se po schování hlášky o úspěchu) */\n    const afterSuccess = useCallback(() => {\n        setShowSuccess(false);\n        navigate(\"/login\");\n    }, [setShowSuccess, navigate]);\n\n    /** Callback volaný po selhání registrace (zavolá se po schování hlášky o selhání) */\n    const afterFail = useCallback(() => {\n        setShowError(false);\n    }, [setShowError]);\n\n    return (\n        <Box sx={{ height: \"100vh\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n            <Container maxWidth=\"sm\">\n                <Paper elevation={10}>\n                    <Stack sx={{ p: 1, alignItems: \"center\" }}>\n                        {/* Nadpis */}\n                        <Avatar>\n                            <Person />\n                        </Avatar>\n                        <Typography variant=\"h5\" sx={{ p: 1 }}>\n                            Registrace\n                        </Typography>\n\n                        {/* E-mail */}\n                        <TextField value={email} onChange={emailOnChangeHandler} label=\"E-mail\" fullWidth sx={{ mb: 1 }} />\n                        <InputValidation errors={validationErrors} fieldKey=\"email\" value={emailDebounced} />\n\n                        {/* Jméno */}\n                        <TextField value={name} onChange={nameOnChangeHandler} label=\"Vaše jméno\" fullWidth sx={{ mb: 1 }} />\n                        <InputValidation errors={validationErrors} fieldKey=\"name\" value={nameDebounced} />\n\n                        {/* Heslo */}\n                        <TextField type=\"password\" value={password} onChange={passwordOnChangeHandler} label=\"Heslo\" fullWidth sx={{ mb: 1 }} />\n                        <InputValidation errors={validationErrors} fieldKey=\"password\" value={passwordDebounced} />\n\n                        {/* Potvrzení hesla */}\n                        <TextField type=\"password\" value={passwordConfirmation} onChange={passwordConfirmationOnChangeHandler} label=\"Potvrzení hesla\" fullWidth sx={{ mb: 1 }} />\n                        <InputValidation errors={validationErrors} fieldKey=\"passwordConfirmation\" value={passwordConfirmationDebounced} />\n\n                        <Typography variant=\"subtitle2\" sx={{ alignSelf: \"start\", mb: 1 }}>\n                            Již máte účet?&nbsp;\n                            <Link to=\"/login\">\n                                Přihlašte se\n                            </Link>\n                            .\n                        </Typography>\n\n                        {/* Potvrzení formuláře */}\n                        <LoadingButton onClick={onSubmitHandler} variant=\"contained\" loading={isWaitingForServer} fullWidth>Registrovat</LoadingButton>\n\n                        {/* Hláška o úspěšné registraci */}\n                        <Snackbar open={showSuccess} autoHideDuration={2000} onClose={afterSuccess}>\n                            <Alert onClose={afterSuccess} severity=\"success\" sx={{ width: '100%' }}>\n                                Registrace proběhla úspěšně.\n                            </Alert>\n                        </Snackbar>\n\n                        {/* Hláška o selhání registrace */}\n                        <Snackbar open={showError} autoHideDuration={5000} onClose={afterFail}>\n                            <Alert onClose={afterFail} severity=\"error\" sx={{ width: '100%' }}>\n                                Registrace se nezdařila, zkontrolujte zadané údaje a zkuste to znovu.\n                            </Alert>\n                        </Snackbar>\n                    </Stack>\n                </Paper>\n            </Container>\n        </Box>\n    );\n}\n\nRegister.displayName = \"RegisterComponent\";\nexport default Register;","import { object, string, date } from \"yup\";\n\nexport const todoSchema = object({\n    name: string()\n        .required(\"Name is required\")\n        .max(100, \"Name must be shorter than 100 chars.\"),\n    description: string()\n        .max(1000, \"Description must be shorter than 1000 chars.\"),\n    deadline: date()\n});","import axios from \"axios\";\nimport { TodoItem } from \"../common/interfaces/todo-item.interface\";\nimport { API_FULL_ROUTES } from \"../config\";\nimport AuthorizationService from \"./authorize.service\";\n\nclass TodoService {\n    /**\n     * Vytvoří úkol.\n     */\n    create = (todo: Omit<TodoItem, \"_id\" | \"createdAt\" | \"user\" | \"updatedAt\" | \"finishedAt\">) => {\n        return axios.post(\n            API_FULL_ROUTES.todos,\n            todo,\n            {\n                headers: AuthorizationService.getAuthHeader()\n            }\n        );\n    };\n\n    /**\n     * Upraví úkol.\n     */\n    update = (todo: Omit<TodoItem, \"createdAt\" | \"user\" | \"updatedAt\">) => {\n        return axios.put(\n            API_FULL_ROUTES.updateTodo.replace(\"{todoId}\", todo._id),\n            todo,\n            {\n                headers: AuthorizationService.getAuthHeader()\n            }\n        );\n    };\n\n    /**\n     * Odstraní úkol.\n     */\n    delete = (id: string) => {\n        return axios.delete(\n            API_FULL_ROUTES.deleteTodo.replace(\"{todoId}\", id),\n            {\n                headers: AuthorizationService.getAuthHeader()\n            }\n        );\n    };\n\n    /**\n     * Načte úkol s předaným Id.\n     * @param id Id úkolu, který se má načíst.\n     */\n    get = (id: string) => {\n        return axios.get(\n            API_FULL_ROUTES.getTodo.replace(\"{todoId}\", id),\n            {\n                headers: AuthorizationService.getAuthHeader()\n            }\n        ).then(res => res.data);\n    };\n\n    /**\n     * Vrací všechny úkolu aktuálně přihlášeného uživatele.\n     */\n    getAll = () => {\n        return axios.get(\n            API_FULL_ROUTES.todos,\n            {\n                headers: AuthorizationService.getAuthHeader()\n            }\n        ).then(res => res.data);\n    };\n\n    /**\n     * Označí úkol za dokončený nebo nedokončený (nastaví datum a čas dokončení na aktuální nebo na undefined).\n     */\n    changeState = (todo: TodoItem, isDone: boolean) => {\n        todo.finishedAt = isDone ? new Date() : undefined;\n        return this.update(todo);\n    };\n}\n\nexport default new TodoService();","import { Close } from \"@mui/icons-material\";\nimport { DateTimePicker } from \"@mui/lab\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, TextField } from \"@mui/material\";\nimport { FC, useCallback, useMemo, useState } from \"react\";\nimport { TodoItem } from \"../../common/interfaces/todo-item.interface\";\nimport { useDebounce } from \"../../hooks/use-debounce.hook\";\nimport { useValidation } from \"../../hooks/use-validation.hook\";\nimport { todoSchema } from \"../../validation/todo.schema\";\nimport TodoService from \"../../services/todo.service\";\nimport InputValidation from \"../../common/input-validation.component\";\nimport { useEffect } from \"react\";\n\ninterface TodoEditorProps {\n    item: TodoItem | null;\n    open: boolean;\n    onClose: () => void;\n    onSuccess: () => void;\n}\n\nconst TodoEditor: FC<TodoEditorProps> = ({ item, open, onClose, onSuccess }) => {\n    // Název\n    const [name, setName] = useState<string | null>(null);\n    const nameDebounced = useDebounce(name, 1000);\n\n    // Popis\n    const [description, setDescription] = useState<string | null>(null);\n    const descriptionDebounced = useDebounce(description, 1000);\n\n    // Max. datum dokončení\n    const [deadline, setDeadline] = useState<Date | undefined>();\n\n    // Objekt pro validační knihovnu yup reprezentující data formuláře.\n    const formData = useMemo(() => ({\n        _id: item?._id,\n        name: nameDebounced,\n        description: descriptionDebounced,\n        deadline\n    }), [item, nameDebounced, descriptionDebounced, deadline]);\n\n    const [isValid, validationErrors] = useValidation({\n        schema: todoSchema,\n        object: formData\n    });\n\n    /** Callback volaný při změně názvu */\n    const nameOnChangeHandler = useCallback((ev) => {\n        setName(ev.target.value);\n    }, [setName]);\n\n    /** Callback volaný při změně popisku */\n    const descriptionOnChangeHandler = useCallback((ev) => {\n        setDescription(ev.target.value);\n    }, [setDescription]);\n\n    /** Callback volaný při změně max. datumu dokončení */\n    const deadlineOnChangeHandler = useCallback((value) => {\n        setDeadline(value);\n    }, [setDeadline]);\n\n    /** Callback volaný při potvrzení formuláře */\n    const onSubmitHandler = useCallback(() => {\n        const save = async () => {\n            if (!item) {\n                await TodoService.create(formData as TodoItem);\n            }\n            else {\n                await TodoService.update(formData as TodoItem);\n            }\n        };\n\n        if (isValid) {\n            save().then(() => {\n                // Zavolám callback po úspěšném uložení změn z okna.\n                onSuccess();\n\n                // Vyčistím hodnoty okna.\n                setName(null);\n                setDescription(null);\n                setDeadline(undefined);\n            });\n        }\n    }, [isValid, formData, onSuccess, item]);\n\n    // Po změně zvoleného úkolu.\n    useEffect(() => {\n        setName(item?.name || null);\n        setDescription(item?.description || null);\n\n        if (!!item && !!item.deadline) {\n            setDeadline(new Date(item.deadline));\n        }\n        else {\n            setDeadline(undefined);\n        }\n    }, [item]);\n\n    return (\n        <Dialog open={open}>\n            {/* Nadpis okna */}\n            <DialogTitle>\n                {!!item ? \"Upravit úkol\" : \"Přidat úkol\"}\n                <IconButton\n                    aria-label=\"close\"\n                    onClick={onClose}\n                    sx={{\n                        position: \"absolute\",\n                        right: 8,\n                        top: 8,\n                        color: (theme) => theme.palette.grey[500],\n                    }}\n                >\n                    <Close />\n                </IconButton>\n            </DialogTitle>\n            {/* Obsah okna */}\n            <DialogContent>\n                {/* Název */}\n                <TextField value={name} onChange={nameOnChangeHandler} label=\"Název\" fullWidth sx={{ mt: 1, mb: 1 }} />\n                <InputValidation errors={validationErrors} fieldKey=\"name\" value={nameDebounced} />\n                {/* Popis */}\n                <TextField value={description} onChange={descriptionOnChangeHandler} label=\"Popis\" fullWidth sx={{ mt: 1, mb: 1 }} />\n                <InputValidation errors={validationErrors} fieldKey=\"description\" value={descriptionDebounced} />\n                {/* Max. datum dokončení */}\n                <DateTimePicker\n                    label=\"Max. datum dokončení\"\n                    value={deadline}\n                    onChange={deadlineOnChangeHandler}\n                    renderInput={(params) => <TextField {...params}\n                        fullWidth\n                        sx={{ mt: 1, mb: 1 }} />}\n                />\n                <InputValidation errors={validationErrors} fieldKey=\"deadline\" value={deadline?.toString()} />\n            </DialogContent>\n            <DialogActions>\n                <Button variant=\"outlined\" color=\"error\" onClick={onClose} fullWidth>Zahodit změny</Button>\n                <Button variant=\"contained\" color=\"success\" onClick={onSubmitHandler} fullWidth>Uložit</Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default TodoEditor;","import { Edit, Delete } from \"@mui/icons-material\";\nimport { ListItem, Stack, IconButton, ListItemButton, ListItemIcon, Checkbox, ListItemText, Typography } from \"@mui/material\";\nimport moment from \"moment\";\nimport { FC } from \"react\";\nimport { TodoItem } from \"../../common/interfaces/todo-item.interface\";\n\ninterface TodoItemProps {\n    item: TodoItem;\n    onIsDoneChangedHandler: (item: TodoItem, isChecked: boolean) => void;\n    onEditButtonClickedHandler: (item: TodoItem) => void;\n    onRemoveButtonClickedHandler: (item: TodoItem) => void;\n}\n\nconst TodoListItem: FC<TodoItemProps> = ({ item, onIsDoneChangedHandler, onEditButtonClickedHandler, onRemoveButtonClickedHandler }) => {\n    /** Callback volaný kliknutí na položku */\n    const toggleHandler = () => {\n        onIsDoneChangedHandler(item, !item.finishedAt);\n    };\n\n    return (\n        <ListItem\n            key={item._id}\n            // Další akce úkolu - editace, smazání\n            secondaryAction={\n                <Stack direction=\"row\">\n                    {/* Editace */}\n                    <IconButton onClick={() => onEditButtonClickedHandler(item)}>\n                        <Edit />\n                    </IconButton>\n                    {/* Smazání */}\n                    <IconButton onClick={() => onRemoveButtonClickedHandler(item)}>\n                        <Delete />\n                    </IconButton>\n                </Stack>\n            }\n            disablePadding\n        >\n            {/* Zaškrtnutí úkolu */}\n            <ListItemButton onClick={toggleHandler}>\n                <ListItemIcon>\n                    <Checkbox\n                        edge=\"start\"\n                        checked={!!item.finishedAt}\n                        disableRipple\n                    />\n                </ListItemIcon>\n                {/* Název úkolu */}\n                <ListItemText\n                    primary={item.name}\n                    secondary={\n                        <>\n                            {!!item.deadline &&\n                                <Typography variant=\"subtitle2\" sx={{ fontSize: \"10pt\" }}>{moment(item.deadline).format(\"MMMM Do YYYY, h:mm:ss a\")}</Typography>\n                            }\n                            <Typography variant=\"subtitle1\" sx={{ fontSize: \"10pt\" }}>{item.description}</Typography>\n                        </>\n                    }\n                    sx={{ paddingRight: 7, wordBreak: \"break-all\" }}\n                />\n            </ListItemButton>\n        </ListItem>\n    );\n}\n\nexport default TodoListItem;","import { Button, Dialog, DialogActions, DialogContent, DialogTitle, Typography } from \"@material-ui/core\";\nimport { FC, useCallback } from \"react\";\nimport { TodoItem } from \"../../common/interfaces/todo-item.interface\";\nimport TodoService from \"../../services/todo.service\";\n\ninterface TodoRemoveDialogProps {\n    item: TodoItem | null,\n    isOpenned: boolean;\n    onAbortHandler: (item: TodoItem) => void;\n    onSuccessHandler: (item: TodoItem) => void;\n}\n\nconst TodoRemoveDialog: FC<TodoRemoveDialogProps> = ({ item, isOpenned, onAbortHandler, onSuccessHandler }) => {\n    /** Callback volaný po kliknutí na \"Nemazat\" */\n    const onCancelButtonClickedHandler = useCallback(() => {\n        if (!!item) {\n            onAbortHandler(item);\n        }\n    }, [item, onAbortHandler]);\n\n    /** Callback volaný po kliknutí na \"Smazat úkol\" */\n    const onRemoveButtonClickedHandler = useCallback(() => {\n        if (!!item) {\n            // Smažu úkol\n            TodoService.delete(item._id)\n                // pak skryju okno\n                .then(() => {\n                    onSuccessHandler(item);\n                });\n        }\n    }, [item, onSuccessHandler]);\n\n    return (\n        <Dialog open={isOpenned}>\n            <DialogTitle>\n                Opravdu si přejete smazat úkol?\n            </DialogTitle>\n            <DialogContent>\n                <Typography>\n                    Kliknutím na tlačítko \"Smazat úkol\" provedete smazání. Opak provedete kliknutím na tlačítko \"Nemazat\".\n                </Typography>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onCancelButtonClickedHandler}>Nemazat</Button>\n                <Button onClick={onRemoveButtonClickedHandler}>Smazat úkol</Button>\n            </DialogActions>\n        </Dialog >\n    );\n}\n\nexport default TodoRemoveDialog;","import { Add, FilterAlt, FilterAltOff } from \"@mui/icons-material\";\nimport { Container, IconButton, List, Paper, Stack, TextField, Typography } from \"@mui/material\";\nimport { FC, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { TodoItem } from \"../../common/interfaces/todo-item.interface\";\nimport TodoEditor from \"../todo-editor/todo-editor.component\";\nimport TodoListItem from \"./todo-list-item-component\";\nimport TodoService from \"../../services/todo.service\";\nimport TodoRemoveDialog from \"./todo-remove-dialog.component\";\nimport { useDebounce } from \"../../hooks/use-debounce.hook\";\n\ninterface TodoListProps {\n\n}\n\nconst TodoList: FC<TodoListProps> = (props) => {\n    // Hledaný výraz.\n    const [searchTerm, setSearchTerm] = useState<string>(\"\");\n    const searchTermDebounced = useDebounce(searchTerm, 150);\n\n    // Příznak, zda-li se mají zobrazovat jen hotové úkoly.\n    const [showOnlyUndone, setShowOnlyUndone] = useState<boolean>(false);\n\n    // Příznak, zda-li je editor úkolu otevřen.\n    const [todoEditorOpened, setTodoEditorOpened] = useState<boolean>(false);\n\n    // Příznak, zda-li je dialog pro smazání úkolu otevřený.\n    const [todoRemoveDialogOpenned, setTodoRemoveDialogOpenned] = useState<boolean>(false);\n\n    // Úkol, který je aktuálně využíván (editován / mazán).\n    const [currentTodoItem, setCurrentTodoItem] = useState<TodoItem | null>(null);\n\n    const [todos, setTodos] = useState<TodoItem[]>([]);\n\n    /** Callback volaný při hledaného výrazu */\n    const searchTermOnChangeHandler = useCallback((ev) => {\n        setSearchTerm(ev.target.value);\n    }, [setSearchTerm]);\n\n    /** Callback volaný při kliknutí na tlačítko pro přepnutí filtru */\n    const onFilterToggleHandler = useCallback(() => {\n        setShowOnlyUndone(!showOnlyUndone);\n    }, [setShowOnlyUndone, showOnlyUndone]);\n\n    /** Callback volaný po kliknutí na tlačítko pro přidání úkolu */\n    const onAddButtonClickedHandler = useCallback(() => {\n        setTodoEditorOpened(true);\n    }, [setTodoEditorOpened]);\n\n    /** Callback volaný po uzavření editoru úkolu */\n    const onTodoEditorClosedHandler = useCallback(() => {\n        setTodoEditorOpened(false);\n        setCurrentTodoItem(null);\n    }, [setTodoEditorOpened, setCurrentTodoItem]);\n\n    const onTodoEditorSuccessHandler = useCallback(() => {\n        setTodoEditorOpened(false);\n        setCurrentTodoItem(null);\n        refreshTodos();\n    }, [setTodoEditorOpened, setCurrentTodoItem]);\n\n    const onTodoEditorOpennedHandler = useCallback((item: TodoItem) => {\n        setCurrentTodoItem(item);\n        setTodoEditorOpened(true);\n    }, [setCurrentTodoItem, setTodoEditorOpened]);\n\n    const onTodoRemoveDialogAbortHandler = useCallback(() => {\n        setTodoRemoveDialogOpenned(false);\n        setCurrentTodoItem(null);\n    }, [setTodoRemoveDialogOpenned, setCurrentTodoItem]);\n\n    const onTodoRemoveDialogSuccessHandler = useCallback(() => {\n        setTodoRemoveDialogOpenned(false);\n        setCurrentTodoItem(null);\n        refreshTodos();\n    }, [setTodoRemoveDialogOpenned]);\n\n    const onTodoRemoveDialogOpennedHandler = useCallback((item: TodoItem) => {\n        setCurrentTodoItem(item);\n        setTodoRemoveDialogOpenned(true);\n    }, [setCurrentTodoItem, setTodoRemoveDialogOpenned]);\n\n    /** Načte všechny úkoly uživatele */\n    const refreshTodos = async () => {\n        const todosRes = await TodoService.getAll();\n        setTodos(todosRes);\n    };\n\n    // Při prvním renderu komponenty načtu úkoly.\n    useEffect(() => {\n        refreshTodos();\n    }, []);\n\n    /** Callback volaný po změně zaškrnutí */\n    const onIsDoneChangedHandler = useCallback((item: TodoItem, isDone: boolean) => {\n        TodoService\n            .changeState(item, isDone)\n            .then(refreshTodos);\n    }, []);\n\n    // Seznam úkolů pro render.\n    const todosMemo = useMemo(() => {\n        return todos\n            .filter(t =>\n                (!showOnlyUndone || !t.finishedAt) &&\n                (t.name.indexOf(searchTermDebounced) > -1 || (t.description && t.description.indexOf(searchTermDebounced) > -1))\n            )\n            .map(t => <TodoListItem item={t} onIsDoneChangedHandler={onIsDoneChangedHandler} onEditButtonClickedHandler={onTodoEditorOpennedHandler} onRemoveButtonClickedHandler={onTodoRemoveDialogOpennedHandler} />);\n    }, [todos, searchTermDebounced, showOnlyUndone, onIsDoneChangedHandler, onTodoEditorOpennedHandler, onTodoRemoveDialogOpennedHandler]);\n\n    return (\n        <>\n            <TodoRemoveDialog isOpenned={todoRemoveDialogOpenned} item={currentTodoItem} onAbortHandler={onTodoRemoveDialogAbortHandler} onSuccessHandler={onTodoRemoveDialogSuccessHandler} />\n            <TodoEditor open={todoEditorOpened} onClose={onTodoEditorClosedHandler} item={currentTodoItem} onSuccess={onTodoEditorSuccessHandler} />\n            <Container maxWidth=\"sm\" sx={{ p: 0 }}>\n                <Paper elevation={3}>\n                    <Stack sx={{ p: 1, maxHeight: \"80vh\" }}>\n                        {/* Vyhledávání */}\n                        <Stack direction=\"row\">\n                            <TextField value={searchTerm} onChange={searchTermOnChangeHandler} placeholder=\"Zadejte hledaný výraz\" fullWidth />\n                            <IconButton color=\"primary\" onClick={onFilterToggleHandler}>\n                                {showOnlyUndone\n                                    ? <FilterAltOff />\n                                    : <FilterAlt />\n                                }\n                            </IconButton>\n                            <IconButton color=\"primary\" onClick={onAddButtonClickedHandler}>\n                                <Add />\n                            </IconButton>\n                        </Stack>\n                        {/* Seznam úkolů */}\n                        {todos.length > 0\n                            ?\n                            <List sx={{ overflowY: \"auto\" }}>\n                                {todosMemo}\n                            </List >\n                            :\n                            <Typography variant=\"caption\" sx={{ pt: 1, textAlign: \"center\" }}>Aktuálně nemáte žádné úkoly</Typography>\n                        }\n                    </Stack>\n                </Paper>\n            </Container>\n        </>\n    );\n}\n\nexport default TodoList;","import { AppBar, Box, Button, Toolbar, Typography } from \"@mui/material\";\nimport { FC } from \"react\";\nimport AuthorizationService from \"../../services/authorize.service\";\nimport TodoList from \"../todo-list/todo-list.component\";\n\ninterface DashboardProps {\n    onLogout: () => void;\n}\n\nconst Dashboard: FC<DashboardProps> = ({ onLogout }) => {\n    /** Callback volaný po kliknutí na tlačítko \"Odhlásit\" */\n    const onLogoutButtonClick = () => {\n        AuthorizationService\n            .logout()\n            .then(onLogout);\n    };\n\n    return (\n        <>\n            {/* Vrchní lišta */}\n            <AppBar position=\"fixed\">\n                <Toolbar>\n                    {/* Nadpis */}\n                    <Typography\n                        variant=\"h6\"\n                        noWrap\n                        component=\"div\"\n                        sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\n                    >\n                        TodoApp\n                    </Typography>\n                    {/* Tlačítko pro odhlášení */}\n                    <Box sx={{ display: \"flex\", flexDirection: \"row-reverse\", flexGrow: 1 }}>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={onLogoutButtonClick}>\n                            Odhlásit se\n                        </Button>\n                    </Box>\n                </Toolbar>\n            </AppBar>\n            {/* Seznam úkolů */}\n            <Box sx={{ pt: 10 }}>\n                <TodoList />\n            </Box>\n        </>\n    );\n}\n\nexport default Dashboard;","import { createTheme } from \"@mui/material/styles\";\n\nconst theme = createTheme({\n    palette: {\n        primary: {\n            main: \"rgba(39,160,221,1)\",\n        },\n        secondary: {\n            main: \"rgba(194,39,194,1)\"\n        },\n        success: {\n            main: \"rgba(2,184,147,1)\"\n        },\n        error: {\n            main: \"#973831\"\n        }\n    }\n});\n\nexport default theme;","import styled from \"@emotion/styled\";\nimport { LocalizationProvider } from \"@mui/lab\";\nimport { ThemeProvider } from \"@mui/material\";\nimport { FC } from \"react\";\nimport theme from \"../../styles/theme\";\nimport DateAdapter from '@mui/lab/AdapterMoment';\n\n/** Styl pozadí */\nconst Gradient = styled.div`\n    background: linear-gradient(149deg, rgba(2,184,147,1) 0%, rgba(39,160,221,1) 50%, rgba(194,39,194,1) 100%);\n    height: 100vh;\n    width: 100vw;\n`;\n\n/**\n * Komponenta - rozložení aplikace.\n */\nconst Layout: FC = ({ children }) => (\n    <ThemeProvider theme={theme}>\n        <LocalizationProvider dateAdapter={DateAdapter}>\n            {/* Obsah z children komponenty */}\n            <Gradient>\n                {children}\n            </Gradient>\n        </LocalizationProvider>\n    </ThemeProvider>\n);\n\nLayout.displayName = \"LayoutComponent\";\nexport default Layout;","import { FC, useCallback, useMemo, useState } from 'react';\nimport { BrowserRouter, Navigate, Route, Routes } from 'react-router-dom';\nimport Login from './components/connect/login.component';\nimport Register from './components/connect/register.component';\nimport Dashboard from './components/dashboard/dashboard.component';\nimport Layout from './components/layout/layout.component';\nimport AuthorizationService from './services/authorize.service';\n\nconst App: FC = () => {\n  // Získání usera.\n  const user = AuthorizationService.getCurrentUser();\n\n  // Handler pro notifikaci o přihlášení.\n  const [isAuthenticated, setIsAutheticated] = useState(user != null);\n\n  /** Callback volaný po úspěšném přihlášení uživatele */\n  const onLoginSuccessHandler = useCallback(() => {\n    setIsAutheticated(true);\n  }, [setIsAutheticated]);\n\n  /** Callback volaný po úspěšném odhlášení uživatele */\n  const logoutSuccessHandler = useCallback(() => {\n    setIsAutheticated(false);\n  }, [setIsAutheticated]);\n\n  const dashboardMemo = useMemo(() => (\n    <Dashboard onLogout={logoutSuccessHandler} />\n  ), [logoutSuccessHandler]);\n\n  return (\n    <Layout>\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={isAuthenticated ? dashboardMemo : <Navigate to=\"login\" />} />\n          <Route path=\"login\" element={!isAuthenticated ? <Login onSuccess={onLoginSuccessHandler} /> : dashboardMemo} />\n          <Route path=\"register\" element={!isAuthenticated ? <Register /> : dashboardMemo} />\n        </Routes>\n      </BrowserRouter>\n    </Layout>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}